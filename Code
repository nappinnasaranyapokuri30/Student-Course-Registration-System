-- Create Database (optional in online compilers)
-- CREATE DATABASE StudentDB;
-- USE StudentDB;

-- 1. Create Tables
CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    department VARCHAR(30)
);

CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(50),
    credits INT
);

CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    grade CHAR(2),
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

-- 2. Insert Sample Data
INSERT INTO Students VALUES 
(1, 'Alice', 20, 'Computer Science'),
(2, 'Bob', 22, 'Electronics'),
(3, 'Charlie', 21, 'Mechanical'),
(4, 'David', 23, 'Computer Science');

INSERT INTO Courses VALUES
(101, 'Database Systems', 4),
(102, 'Operating Systems', 3),
(103, 'Data Structures', 4);

INSERT INTO Enrollments VALUES
(1, 1, 101, 'A'),
(2, 1, 102, 'B'),
(3, 2, 101, 'C'),
(4, 3, 103, 'A'),
(5, 4, 102, 'B');

-- 3. Queries

-- a) Show all students
SELECT * FROM Students;

-- b) List all courses taken by Alice
SELECT s.name, c.course_name, e.grade
FROM Students s
JOIN Enrollments e ON s.student_id = e.student_id
JOIN Courses c ON e.course_id = c.course_id
WHERE s.name = 'Alice';

-- c) Count students in each department
SELECT department, COUNT(*) AS total_students
FROM Students
GROUP BY department;

-- d) Find students who got 'A' grade
SELECT s.name, c.course_name
FROM Students s
JOIN Enrollments e ON s.student_id = e.student_id
JOIN Courses c ON e.course_id = c.course_id
WHERE e.grade = 'A';

-- e) Average age of students
SELECT AVG(age) AS avg_age FROM Students;
